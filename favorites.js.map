{"version":3,"file":"favorites.js","sources":["../src/js/favorites.js"],"sourcesContent":["// // to fetch header\n//     fetch('partials/header.html')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.text();\n//             })\n//                         .then(data => {\n//                 const tempDiv = document.createElement('div'); // to add div temporarly \n//                 tempDiv.innerHTML = data; // add to the temp div\n\n//                 // just select navbar\n//                 const navbar = tempDiv.querySelector('nav.navbar');\n\n//                 // if theres navbar add it\n//                 if (navbar) {\n//                     document.getElementById('header').appendChild(navbar); // add navbar to the heaeder\n//                 } else {\n//                     console.error('Navbar not found in header.html');\n//                 }\n//             })\n//             .catch(error => {\n//                 console.error('Fetch error:', error);\n//             });\n\nconst messageContainer = document.getElementById('message-container'); // to select message container\n\n// to fetch(?) ids from local storage\n\nfunction getFavoriteIds() {\n    const favArrString = localStorage.getItem('favArr');\n    let favArr = [];\n    // to fetch favArr from local storage\n    try {\n        favArr = favArrString ? JSON.parse(favArrString) : [];\n    } catch (error) {\n\n        console.error('Error parsing favArr from localStorage:', error);\n        favArr = [];  // if favoriteIdsturns null then return an empty array\n    }\n\n    const favoriteCards = document.querySelector('.favoriteCards');\n\n    if (favoriteCards) {\n        favoriteCards.innerHTML = \"\"; // clean all mesages in message container\n    }\n\n\n    if (favArr.length === 0) {\n        messageContainer.innerHTML = \"\"\n        messageContainer.innerHTML = `\n        <div class=\"fav-message-container\">\n\n        <img  src=\"./img/raccoon-sad-fav.png\" class=\"fav-raccoon\">\n        \n        <p class=\"fav-message\">It appears that you haven't added any recipes to your favorites yet. To get started, you can add recipes that you like to your favorites for easier access in the future.</p>\n\n\n        <img  src=\"./img/raccoon-sad-fav.png\" class=\"fav-chefs-hat\">\n        </div>\n        `;\n    }\n    return favArr;\n}\n\n//async function to fetch data \nasync function fetchById(id) {\n    const response = await fetch(`https://tasty-treats-backend.p.goit.global/api/recipes/${id}`);\n    if (!response.ok) {\n        throw new Error('Network response was not ok');// to control if the fetch is okay\n    }\n    const recipe = await response.json(); //turn api response JSN format\n    return recipe;\n\n\n}\n\n\n//to fetch all recipes that user selected as favorite\nasync function fetchFavorites() {\n    const favoriteIds = getFavoriteIds();//get ids from local storage\n    try {\n        const recipes = await Promise.all(favoriteIds.map(id => fetchById(id))); // use these ids to fetch recipes from api. Promise.all means makes all api requests in parallel AND bringd together into the results\n        return recipes; //return all recipes in array\n    } catch (error) {\n        console.error('Error fetching favorite recipes:', error);\n        return []; // Return an empty array if there is an error\n    }\n\n}\n\n\n\n//to display recipes \nasync function renderFavoriteRecipes() {\n\n    const recipes = await fetchFavorites(); //fetch favorite recipes with fetchAllFavorites function\n\n    if (recipes.length === 0) {\n        // console.log('No favorite recipes found'); //eğer favori tarif yoksa mesaj göster\n\n    } else {\n\n        // messageContainer.innerHTML += favImgDiv; // fotoğrafları message container içerisine eklemek için\n        const favoriteCards = document.querySelector('.favorite-cards');\n        favoriteCards.innerHTML = '';\n\n\n        const favImgDiv = `\n        <div class=\"fav-img\"> \n            <img class=\"fav-img-item-small\" src=\"./img/favorites-small-plate-pic.png\" alt=\"fav-hero-prepared-small-plate-photo\">\n        </div>`;\n        recipes.forEach(recipe => {\n            // Tarif kartının HTML yapısını burada oluştur\n            const filledStars = Math.round(recipe.rating);\n            const emptyStars = 5 - filledStars;\n            const cardHTML = `\n      <li class=\"cards-listing\" style=\"background-image: url(${recipe.preview\n                });\">\n        <button class=\"heard-button\" data-id=\"${recipe._id\n                }\" aria-label=\"like-btn\"><svg class=\"svg-heard add-to-fav\" data-id=\"${recipe._id\n                }\" width=\"22px\" height=\"22px\"><use href=\"./svg/sprite.svg#icon-heart-filled\"></use></svg></button>\n      <div class=\"card-content-container\">\n         <div class=\"text-container\">\n            <h3 class=\"card-title\">${recipe.title}</h3>\n              <p class=\"specification-text\">${recipe.description}</p>\n          </div>\n\n          <div class=\"card-rating-container\">\n              <div class=\"rating-container\">\n                  <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                  <div class=\"star-container\">\n                    ${`<svg class=\"card-star-svg\">\n                    <use href=\"./svg/sprite.svg#icon-star\"></use>\n                      </svg>`.repeat(filledStars)}\n\n                    ${`<svg class=\"card-star-svg\">\n                    <use href=\"./svg/sprite.svg#icon-emptystar\"></use>\n                    </svg>`.repeat(emptyStars)}\n                  </div>    \n                </div>\n              \n            <button class=\"recipe-button\" data-id=\"${recipe._id\n                }\">See recipe</button>\n        </div>      \n      </li>\n    `;\n            favoriteCards.innerHTML += cardHTML; // Kartı messageContainer'a ekle\n        });\n        favoritesHeartBtn();\n    }\n}\n\nfunction favoritesHeartBtn() {\n    const likeButtons = document.querySelectorAll('.heard-button');\n    likeButtons.forEach(button => {\n        button.addEventListener('click', function () {\n            const recipeId = button.dataset.id;\n            const favArrString = localStorage.getItem('favArr');\n            if (favArrString.includes(recipeId)) {\n                let favArr = JSON.parse(favArrString)\n                favArr.splice(favArr.indexOf(recipeId), 1);\n                localStorage.setItem('favArr', JSON.stringify(favArr));\n            }\n            renderFavoriteRecipes();\n        });\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', renderFavoriteRecipes);\n\n\n\n// to fetch footer\n\n\n"],"names":["messageContainer","getFavoriteIds","favArrString","favArr","error","favoriteCards","fetchById","id","response","fetchFavorites","favoriteIds","renderFavoriteRecipes","recipes","recipe","filledStars","emptyStars","cardHTML","favoritesHeartBtn","button","recipeId"],"mappings":"2CA0BA,MAAMA,EAAmB,SAAS,eAAe,mBAAmB,EAIpE,SAASC,GAAiB,CACtB,MAAMC,EAAe,aAAa,QAAQ,QAAQ,EAClD,IAAIC,EAAS,CAAA,EAEb,GAAI,CACAA,EAASD,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAA,CACtD,OAAQE,EAAO,CAEZ,QAAQ,MAAM,0CAA2CA,CAAK,EAC9DD,EAAS,CAAA,CACZ,CAED,MAAME,EAAgB,SAAS,cAAc,gBAAgB,EAE7D,OAAIA,IACAA,EAAc,UAAY,IAI1BF,EAAO,SAAW,IAClBH,EAAiB,UAAY,GAC7BA,EAAiB,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAY1BG,CACX,CAGA,eAAeG,EAAUC,EAAI,CACzB,MAAMC,EAAW,MAAM,MAAM,0DAA0DD,CAAE,EAAE,EAC3F,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAGjD,OADe,MAAMA,EAAS,MAIlC,CAIA,eAAeC,GAAiB,CAC5B,MAAMC,EAAcT,IACpB,GAAI,CAEA,OADgB,MAAM,QAAQ,IAAIS,EAAY,IAAIH,GAAMD,EAAUC,CAAE,CAAC,CAAC,CAEzE,OAAQH,EAAO,CACZ,eAAQ,MAAM,mCAAoCA,CAAK,EAChD,EACV,CAEL,CAKA,eAAeO,GAAwB,CAEnC,MAAMC,EAAU,MAAMH,IAEtB,GAAIG,EAAQ,SAAW,EAGhB,CAGH,MAAMP,EAAgB,SAAS,cAAc,iBAAiB,EAC9DA,EAAc,UAAY,GAO1BO,EAAQ,QAAQC,GAAU,CAEtB,MAAMC,EAAc,KAAK,MAAMD,EAAO,MAAM,EACtCE,EAAa,EAAID,EACjBE,EAAW;AAAA,+DACkCH,EAAO,OACrD;AAAA,gDAC+BA,EAAO,GACvD,sEAAsFA,EAAO,GAC5E;AAAA;AAAA;AAAA,qCAGoBA,EAAO,KAAK;AAAA,8CACHA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKrBA,EAAO,OAAO,QAAQ,CAAC,CAAC;AAAA;AAAA,sBAE7C;AAAA;AAAA,8BAEQ,OAAOC,CAAW,CAAC;AAAA;AAAA,sBAE3B;AAAA;AAAA,4BAEM,OAAOC,CAAU,CAAC;AAAA;AAAA;AAAA;AAAA,qDAIOF,EAAO,GAC3C;AAAA;AAAA;AAAA,MAILR,EAAc,WAAaW,CACvC,CAAS,EACDC,GACH,CACL,CAEA,SAASA,GAAoB,CACL,SAAS,iBAAiB,eAAe,EACjD,QAAQC,GAAU,CAC1BA,EAAO,iBAAiB,QAAS,UAAY,CACzC,MAAMC,EAAWD,EAAO,QAAQ,GAC1BhB,EAAe,aAAa,QAAQ,QAAQ,EAClD,GAAIA,EAAa,SAASiB,CAAQ,EAAG,CACjC,IAAIhB,EAAS,KAAK,MAAMD,CAAY,EACpCC,EAAO,OAAOA,EAAO,QAAQgB,CAAQ,EAAG,CAAC,EACzC,aAAa,QAAQ,SAAU,KAAK,UAAUhB,CAAM,CAAC,CACxD,CACDQ,GACZ,CAAS,CACT,CAAK,CACL,CAEA,SAAS,iBAAiB,mBAAoBA,CAAqB"}