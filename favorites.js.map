{"version":3,"file":"favorites.js","sources":["../src/img/raccoon-sad-fav.png","../src/js/favorites.js"],"sourcesContent":["export default \"__VITE_ASSET__wkelZeLu__\"","import racoon from '../img/raccoon-sad-fav.png';\nimport sprite from '../svg/sprite.svg';\n\nconst messageContainer = document.getElementById('message-container'); // to select message container\nlet currentCategory = 'All Categories';\nlet previousSelectedButton = null;\nlet currentPage = 1;\nconst recipesPerPage = 12;\nimport { openModal, initModal } from './modal.js';\n\n// to fetch ids from local storage\nfunction getFavoriteIds() {\n  const favArrString = localStorage.getItem('favArr');\n  return favArrString ? JSON.parse(favArrString) : [];\n}\n\n// async function to fetch data\nasync function fetchById(id) {\n  try {\n    const response = await fetch(\n      `https://tasty-treats-backend.p.goit.global/api/recipes/${id}`\n    );\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const recipe = await response.json();\n    return recipe;\n  } catch (error) {\n    console.error('Error fetching recipe by ID:', error);\n    return null;\n  }\n}\n\n// to fetch all recipes that user selected as favorite\nasync function fetchFavorites() {\n  const favoriteIds = getFavoriteIds();\n  try {\n    const recipes = await Promise.all(favoriteIds.map(id => fetchById(id)));\n    return recipes.filter(recipe => recipe !== null);\n  } catch (error) {\n    console.error('Error fetching favorite recipes:', error);\n    return [];\n  }\n}\n\nfunction addRecipeButtonListeners() {\n  const recipeButtons = document.querySelectorAll('.recipe-button');\n  recipeButtons.forEach(button => {\n    button.addEventListener('click', function () {\n      const recipeId = this.getAttribute('data-id');\n      openModal(recipeId);\n    });\n  });\n}\n\n// to display recipes\nasync function renderFavoriteRecipes(page = 1) {\n  const recipes = await fetchFavorites();\n  currentPage = page;\n\n  if (recipes.length === 0) {\n    // Display a message if no favorite recipes are found\n    messageContainer.innerHTML = `\n        <div class=\"fav-message-container\">\n            <img src=\"${racoon}\" class=\"fav-raccoon\">\n            <p class=\"fav-message\">It appears that you haven't added any recipes to your favorites yet. To get started, you can add recipes that you like to your favorites for easier access in the future.</p>\n            <img src=\"${racoon}\" class=\"fav-chefs-hat\">\n        </div>\n        `;\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = '';\n  } else {\n    // Extract categories from recipes and store in local storage\n    const categories = [...new Set(recipes.map(recipe => recipe.category))];\n    localStorage.setItem('favArrCategory', JSON.stringify(categories));\n\n    renderCategoryNames();\n    renderRecipes(recipes, page);\n    renderPaginationControls(recipes.length, page);\n    addRecipeButtonListeners();\n  }\n}\n\nfunction renderRecipes(recipes, page) {\n  const favoriteCards = document.querySelector('.favorite-cards');\n  favoriteCards.innerHTML = '';\n\n  const start = (page - 1) * recipesPerPage;\n  const end = start + recipesPerPage;\n  const recipesToDisplay = recipes.slice(start, end);\n\n  recipesToDisplay.forEach(recipe => {\n    const filledStars = Math.round(recipe.rating);\n    const emptyStars = 5 - filledStars;\n    const cardHTML = `\n        <li class=\"cards-listing\" style=\"background-image: url(${\n          recipe.preview\n        });\">\n            <button class=\"heard-button\" data-category=\"${\n              recipe.category\n            }\" data-id=\"${recipe._id}\" aria-label=\"like-btn\">\n                <svg class=\"svg-heard add-to-fav\" data-id=\"${\n                  recipe._id\n                }\" width=\"22px\" height=\"22px\">\n                    <use href=\"${sprite}#icon-heart-filled\"></use>\n                </svg>\n            </button>\n            <div class=\"card-content-container\">\n                <div class=\"text-container\">\n                    <h3 class=\"card-title\">${recipe.title}</h3>\n                    <p class=\"specification-text\">${recipe.description}</p>\n                </div>\n                <div class=\"card-rating-container\">\n                    <div class=\"rating-container\">\n                        <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                        <div class=\"star-container\">\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"${sprite}#icon-star\"></use>\n                            </svg>`.repeat(filledStars)}\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"${sprite}#icon-emptystar\"></use>\n                            </svg>`.repeat(emptyStars)}\n                        </div>    \n                    </div>\n                    <button class=\"recipe-button\" data-id=\"${\n                      recipe._id\n                    }\">See recipe</button>\n                </div>      \n            </div>\n        </li>\n        `;\n    favoriteCards.innerHTML += cardHTML;\n  });\n\n  favoritesHeartBtn();\n  addHeartButtonListeners();\n}\n\nfunction renderPaginationControls(\n  totalRecipes,\n  currentPage,\n  category = 'All Categories'\n) {\n  const totalPages = Math.ceil(totalRecipes / recipesPerPage);\n  const paginationContainer = document.querySelector('.pagination');\n  paginationContainer.innerHTML = `\n        <div class=\"left-arrow-container\">\n            <button id=\"doubleLeft\" class=\"pagination-btn left-end\" ${\n              currentPage === 1 ? 'disabled' : ''\n            }>\n                &laquo;\n            </button>\n            <button id=\"singleLeft\" class=\"pagination-btn left-one\" ${\n              currentPage === 1 ? 'disabled' : ''\n            }>\n                &lsaquo;\n            </button>\n        </div>\n        <div class=\"number-container\">\n        </div>\n        <div class=\"right-arrow-container\">\n            <button id=\"singleRight\" class=\"right-one pagination-btn\" ${\n              currentPage === totalPages ? 'disabled' : ''\n            }>\n                &rsaquo;\n            </button>\n            <button id=\"doubleRight\" class=\"right-end pagination-btn\" ${\n              currentPage === totalPages ? 'disabled' : ''\n            }>\n                &raquo;\n            </button>\n        </div>\n    `;\n\n  const numberContainer =\n    paginationContainer.querySelector('.number-container');\n\n  for (let i = 1; i <= totalPages; i++) {\n    const pageButton = document.createElement('button');\n    pageButton.textContent = i;\n    pageButton.classList.add('pagination-btn', 'page-number');\n    if (i === currentPage) {\n      pageButton.classList.add('active-page');\n    }\n    pageButton.addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(i);\n      } else {\n        filterRecipesByCategory(category, i);\n      }\n    });\n    numberContainer.appendChild(pageButton);\n  }\n\n  // Add event listeners for the arrow buttons\n  paginationContainer\n    .querySelector('#doubleLeft')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(1);\n      } else {\n        filterRecipesByCategory(category, 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#singleLeft')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(currentPage - 1);\n      } else {\n        filterRecipesByCategory(category, currentPage - 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#singleRight')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(currentPage + 1);\n      } else {\n        filterRecipesByCategory(category, currentPage + 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#doubleRight')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(totalPages);\n      } else {\n        filterRecipesByCategory(category, totalPages);\n      }\n    });\n}\nfunction favoritesHeartBtn() {\n  const likeButtons = document.querySelectorAll('.heard-button');\n  likeButtons.forEach(button => {\n    button.addEventListener('click', async function () {\n      const recipeId = button.dataset.id;\n      const recipeCategory = button.dataset.category;\n      const favArrString = localStorage.getItem('favArr');\n      let favArr = favArrString ? JSON.parse(favArrString) : [];\n\n      if (favArr.includes(recipeId)) {\n        favArr.splice(favArr.indexOf(recipeId), 1);\n        localStorage.setItem('favArr', JSON.stringify(favArr));\n      }\n\n      // Fetch all favorite recipes to check categories\n      const recipes = await fetchFavorites();\n\n      // Check if there are any remaining recipes of the same category\n      const remainingRecipes = recipes.filter(\n        recipe => recipe.category === recipeCategory\n      );\n\n      if (remainingRecipes.length === 0) {\n        const favArrCategoryString = localStorage.getItem('favArrCategory');\n        let favArrCategory = favArrCategoryString\n          ? JSON.parse(favArrCategoryString)\n          : [];\n\n        if (favArrCategory.includes(recipeCategory)) {\n          favArrCategory.splice(favArrCategory.indexOf(recipeCategory), 1);\n          localStorage.setItem(\n            'favArrCategory',\n            JSON.stringify(favArrCategory)\n          );\n        }\n\n        // Switch to \"All Categories\" if the current category becomes empty\n        currentCategory = 'All Categories';\n        if (previousSelectedButton) {\n          previousSelectedButton.style.backgroundColor = '';\n          previousSelectedButton.style.color = '';\n          previousSelectedButton.style.border = '';\n        }\n        const allCategoriesButton = document.querySelector(\n          '.fav-categories-list button:first-child'\n        );\n        allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n        allCategoriesButton.style.color = '#fff';\n        allCategoriesButton.style.border = '1px solid var(--primary-color)';\n        previousSelectedButton = allCategoriesButton;\n      }\n\n      renderCategoryNames();\n      if (currentCategory === 'All Categories') {\n        renderFavoriteRecipes();\n      } else {\n        filterRecipesByCategory(currentCategory);\n      }\n    });\n  });\n}\nfunction addHeartButtonListeners() {\n  const likeButtons = document.querySelectorAll('.heard-button');\n  let favCategoryArr = [];\n  likeButtons.forEach(button => {\n    if (!favCategoryArr.includes(button.dataset.category)) {\n      favCategoryArr.push(button.dataset.category);\n    }\n  });\n  favCategoryArr.sort();\n}\n\nfunction renderCategoryNames() {\n  const favCategoriesList = document.querySelector('.fav-categories-list');\n  const favArrCategoryString = localStorage.getItem('favArrCategory');\n  let favArrCategory = favArrCategoryString\n    ? JSON.parse(favArrCategoryString)\n    : [];\n  favCategoriesList.innerHTML = '';\n\n  const allCategoriesLi = document.createElement('li');\n  const allCategoriesButton = document.createElement('button');\n  allCategoriesButton.textContent = 'All Categories';\n  allCategoriesButton.classList.add('category-button');\n  allCategoriesButton.addEventListener('click', () => {\n    currentCategory = 'All Categories';\n    if (previousSelectedButton) {\n      previousSelectedButton.style.backgroundColor = '';\n      previousSelectedButton.style.color = '';\n      previousSelectedButton.style.border = '';\n    }\n    allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n    allCategoriesButton.style.color = '#fff';\n    allCategoriesButton.style.border = '1px solid var(--primary-color)';\n    previousSelectedButton = allCategoriesButton;\n    renderFavoriteRecipes();\n  });\n  allCategoriesLi.appendChild(allCategoriesButton);\n  favCategoriesList.appendChild(allCategoriesLi);\n\n  favArrCategory.forEach(category => {\n    const li = document.createElement('li');\n    const button = document.createElement('button');\n    button.textContent = category;\n    button.classList.add('category-button');\n    button.addEventListener('click', () => {\n      currentCategory = category;\n      if (previousSelectedButton) {\n        previousSelectedButton.style.backgroundColor = '';\n        previousSelectedButton.style.color = '';\n        previousSelectedButton.style.border = '';\n      }\n      button.style.backgroundColor = 'var(--primary-color)';\n      button.style.color = '#fff';\n      button.style.border = '1px solid var(--primary-color)';\n      previousSelectedButton = button;\n      filterRecipesByCategory(category);\n    });\n    li.appendChild(button);\n    favCategoriesList.appendChild(li);\n  });\n}\n\nasync function filterRecipesByCategory(category, page = 1) {\n  const recipes = await fetchFavorites();\n  const filteredRecipes = recipes.filter(\n    recipe => recipe.category === category\n  );\n  renderRecipes(filteredRecipes, page);\n  renderPaginationControls(filteredRecipes.length, page, category);\n}\ndocument.addEventListener('DOMContentLoaded', () =>\n  renderFavoriteRecipes().then(() => {\n    initModal();\n  })\n);\n"],"names":["racoon","messageContainer","currentCategory","previousSelectedButton","recipesPerPage","getFavoriteIds","favArrString","fetchById","id","response","error","fetchFavorites","favoriteIds","recipe","addRecipeButtonListeners","button","recipeId","openModal","renderFavoriteRecipes","page","recipes","paginationContainer","categories","renderCategoryNames","renderRecipes","renderPaginationControls","favoriteCards","start","end","filledStars","emptyStars","cardHTML","sprite","favoritesHeartBtn","addHeartButtonListeners","totalRecipes","currentPage","category","totalPages","numberContainer","i","pageButton","filterRecipesByCategory","recipeCategory","favArr","favArrCategoryString","favArrCategory","allCategoriesButton","likeButtons","favCategoryArr","favCategoriesList","allCategoriesLi","li","filteredRecipes","initModal"],"mappings":"6DAAA,MAAeA,EAAA,oDCGTC,EAAmB,SAAS,eAAe,mBAAmB,EACpE,IAAIC,EAAkB,iBAClBC,EAAyB,KAE7B,MAAMC,EAAiB,GAIvB,SAASC,GAAiB,CACxB,MAAMC,EAAe,aAAa,QAAQ,QAAQ,EAClD,OAAOA,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAA,CACnD,CAGA,eAAeC,EAAUC,EAAI,CAC3B,GAAI,CACF,MAAMC,EAAW,MAAM,MACrB,0DAA0DD,CAAE,EAClE,EACI,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAG/C,OADe,MAAMA,EAAS,MAE/B,OAAQC,EAAO,CACd,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,IACR,CACH,CAGA,eAAeC,GAAiB,CAC9B,MAAMC,EAAcP,IACpB,GAAI,CAEF,OADgB,MAAM,QAAQ,IAAIO,EAAY,IAAIJ,GAAMD,EAAUC,CAAE,CAAC,CAAC,GACvD,OAAOK,GAAUA,IAAW,IAAI,CAChD,OAAQH,EAAO,CACd,eAAQ,MAAM,mCAAoCA,CAAK,EAChD,EACR,CACH,CAEA,SAASI,GAA2B,CACZ,SAAS,iBAAiB,gBAAgB,EAClD,QAAQC,GAAU,CAC9BA,EAAO,iBAAiB,QAAS,UAAY,CAC3C,MAAMC,EAAW,KAAK,aAAa,SAAS,EAC5CC,EAAUD,CAAQ,CACxB,CAAK,CACL,CAAG,CACH,CAGA,eAAeE,EAAsBC,EAAO,EAAG,CAC7C,MAAMC,EAAU,MAAMT,IAGtB,GAAIS,EAAQ,SAAW,EAAG,CAExBnB,EAAiB,UAAY;AAAA;AAAA,wBAETD,CAAM;AAAA;AAAA,wBAENA,CAAM;AAAA;AAAA,UAG1B,MAAMqB,EAAsB,SAAS,cAAc,aAAa,EAChEA,EAAoB,UAAY,EACpC,KAAS,CAEL,MAAMC,EAAa,CAAC,GAAG,IAAI,IAAIF,EAAQ,IAAIP,GAAUA,EAAO,QAAQ,CAAC,CAAC,EACtE,aAAa,QAAQ,iBAAkB,KAAK,UAAUS,CAAU,CAAC,EAEjEC,IACAC,EAAcJ,EAASD,CAAI,EAC3BM,EAAyBL,EAAQ,OAAQD,CAAI,EAC7CL,GACD,CACH,CAEA,SAASU,EAAcJ,EAASD,EAAM,CACpC,MAAMO,EAAgB,SAAS,cAAc,iBAAiB,EAC9DA,EAAc,UAAY,GAE1B,MAAMC,GAASR,EAAO,GAAKf,EACrBwB,EAAMD,EAAQvB,EACKgB,EAAQ,MAAMO,EAAOC,CAAG,EAEhC,QAAQf,GAAU,CACjC,MAAMgB,EAAc,KAAK,MAAMhB,EAAO,MAAM,EACtCiB,EAAa,EAAID,EACjBE,EAAW;AAAA,iEAEXlB,EAAO,OACR;AAAA,0DAEKA,EAAO,QACrB,cAA0BA,EAAO,GAAG;AAAA,6DAElBA,EAAO,GACR;AAAA,iCACgBmB,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKMnB,EAAO,KAAK;AAAA,oDACLA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA,iDAIrBA,EAAO,OAAO,QAAQ,CAAC,CAAC;AAAA;AAAA,8BAE3C;AAAA,yCACWmB,CAAM;AAAA,oCACX,OAAOH,CAAW,CAAC;AAAA,8BACzB;AAAA,yCACWG,CAAM;AAAA,oCACX,OAAOF,CAAU,CAAC;AAAA;AAAA;AAAA,6DAIhCjB,EAAO,GACR;AAAA;AAAA;AAAA;AAAA,UAKjBa,EAAc,WAAaK,CAC/B,CAAG,EAEDE,IACAC,GACF,CAEA,SAAST,EACPU,EACAC,EACAC,EAAW,iBACX,CACA,MAAMC,EAAa,KAAK,KAAKH,EAAe/B,CAAc,EACpDiB,EAAsB,SAAS,cAAc,aAAa,EAChEA,EAAoB,UAAY;AAAA;AAAA,sEAGpBe,IAAgB,EAAI,WAAa,EAClC;AAAA;AAAA;AAAA,sEAICA,IAAgB,EAAI,WAAa,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAQCA,IAAgBE,EAAa,WAAa,EAC3C;AAAA;AAAA;AAAA,wEAICF,IAAgBE,EAAa,WAAa,EAC3C;AAAA;AAAA;AAAA;AAAA,MAMX,MAAMC,EACJlB,EAAoB,cAAc,mBAAmB,EAEvD,QAASmB,EAAI,EAAGA,GAAKF,EAAYE,IAAK,CACpC,MAAMC,EAAa,SAAS,cAAc,QAAQ,EAClDA,EAAW,YAAcD,EACzBC,EAAW,UAAU,IAAI,iBAAkB,aAAa,EACpDD,IAAMJ,GACRK,EAAW,UAAU,IAAI,aAAa,EAExCA,EAAW,iBAAiB,QAAS,IAAM,CACrCJ,IAAa,iBACfnB,EAAsBsB,CAAC,EAEvBE,EAAwBL,EAAUG,CAAC,CAE3C,CAAK,EACDD,EAAgB,YAAYE,CAAU,CACvC,CAGDpB,EACG,cAAc,aAAa,EAC3B,iBAAiB,QAAS,IAAM,CAC3BgB,IAAa,iBACfnB,EAAsB,CAAC,EAEvBwB,EAAwBL,EAAU,CAAC,CAE3C,CAAK,EAEHhB,EACG,cAAc,aAAa,EAC3B,iBAAiB,QAAS,IAAM,CAC3BgB,IAAa,iBACfnB,EAAsBkB,EAAc,CAAC,EAErCM,EAAwBL,EAAUD,EAAc,CAAC,CAEzD,CAAK,EAEHf,EACG,cAAc,cAAc,EAC5B,iBAAiB,QAAS,IAAM,CAC3BgB,IAAa,iBACfnB,EAAsBkB,EAAc,CAAC,EAErCM,EAAwBL,EAAUD,EAAc,CAAC,CAEzD,CAAK,EAEHf,EACG,cAAc,cAAc,EAC5B,iBAAiB,QAAS,IAAM,CAC3BgB,IAAa,iBACfnB,EAAsBoB,CAAU,EAEhCI,EAAwBL,EAAUC,CAAU,CAEpD,CAAK,CACL,CACA,SAASL,GAAoB,CACP,SAAS,iBAAiB,eAAe,EACjD,QAAQlB,GAAU,CAC5BA,EAAO,iBAAiB,QAAS,gBAAkB,CACjD,MAAMC,EAAWD,EAAO,QAAQ,GAC1B4B,EAAiB5B,EAAO,QAAQ,SAChCT,EAAe,aAAa,QAAQ,QAAQ,EAClD,IAAIsC,EAAStC,EAAe,KAAK,MAAMA,CAAY,EAAI,GAevD,GAbIsC,EAAO,SAAS5B,CAAQ,IAC1B4B,EAAO,OAAOA,EAAO,QAAQ5B,CAAQ,EAAG,CAAC,EACzC,aAAa,QAAQ,SAAU,KAAK,UAAU4B,CAAM,CAAC,IAIvC,MAAMjC,KAGW,OAC/BE,GAAUA,EAAO,WAAa8B,CACtC,EAE2B,SAAW,EAAG,CACjC,MAAME,EAAuB,aAAa,QAAQ,gBAAgB,EAClE,IAAIC,EAAiBD,EACjB,KAAK,MAAMA,CAAoB,EAC/B,GAEAC,EAAe,SAASH,CAAc,IACxCG,EAAe,OAAOA,EAAe,QAAQH,CAAc,EAAG,CAAC,EAC/D,aAAa,QACX,iBACA,KAAK,UAAUG,CAAc,CACzC,GAIQ5C,EAAkB,iBACdC,IACFA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAExC,MAAM4C,EAAsB,SAAS,cACnC,yCACV,EACQA,EAAoB,MAAM,gBAAkB,uBAC5CA,EAAoB,MAAM,MAAQ,OAClCA,EAAoB,MAAM,OAAS,iCACnC5C,EAAyB4C,CAC1B,CAEDxB,IACIrB,IAAoB,iBACtBgB,IAEAwB,EAAwBxC,CAAe,CAE/C,CAAK,CACL,CAAG,CACH,CACA,SAASgC,GAA0B,CACjC,MAAMc,EAAc,SAAS,iBAAiB,eAAe,EAC7D,IAAIC,EAAiB,CAAA,EACrBD,EAAY,QAAQjC,GAAU,CACvBkC,EAAe,SAASlC,EAAO,QAAQ,QAAQ,GAClDkC,EAAe,KAAKlC,EAAO,QAAQ,QAAQ,CAEjD,CAAG,EACDkC,EAAe,KAAI,CACrB,CAEA,SAAS1B,GAAsB,CAC7B,MAAM2B,EAAoB,SAAS,cAAc,sBAAsB,EACjEL,EAAuB,aAAa,QAAQ,gBAAgB,EAClE,IAAIC,EAAiBD,EACjB,KAAK,MAAMA,CAAoB,EAC/B,GACJK,EAAkB,UAAY,GAE9B,MAAMC,EAAkB,SAAS,cAAc,IAAI,EAC7CJ,EAAsB,SAAS,cAAc,QAAQ,EAC3DA,EAAoB,YAAc,iBAClCA,EAAoB,UAAU,IAAI,iBAAiB,EACnDA,EAAoB,iBAAiB,QAAS,IAAM,CAClD7C,EAAkB,iBACdC,IACFA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAExC4C,EAAoB,MAAM,gBAAkB,uBAC5CA,EAAoB,MAAM,MAAQ,OAClCA,EAAoB,MAAM,OAAS,iCACnC5C,EAAyB4C,EACzB7B,GACJ,CAAG,EACDiC,EAAgB,YAAYJ,CAAmB,EAC/CG,EAAkB,YAAYC,CAAe,EAE7CL,EAAe,QAAQT,GAAY,CACjC,MAAMe,EAAK,SAAS,cAAc,IAAI,EAChCrC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,YAAcsB,EACrBtB,EAAO,UAAU,IAAI,iBAAiB,EACtCA,EAAO,iBAAiB,QAAS,IAAM,CACrCb,EAAkBmC,EACdlC,IACFA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAExCY,EAAO,MAAM,gBAAkB,uBAC/BA,EAAO,MAAM,MAAQ,OACrBA,EAAO,MAAM,OAAS,iCACtBZ,EAAyBY,EACzB2B,EAAwBL,CAAQ,CACtC,CAAK,EACDe,EAAG,YAAYrC,CAAM,EACrBmC,EAAkB,YAAYE,CAAE,CACpC,CAAG,CACH,CAEA,eAAeV,EAAwBL,EAAUlB,EAAO,EAAG,CAEzD,MAAMkC,GADU,MAAM1C,KACU,OAC9BE,GAAUA,EAAO,WAAawB,CAClC,EACEb,EAAc6B,EAAiBlC,CAAI,EACnCM,EAAyB4B,EAAgB,OAAQlC,EAAMkB,CAAQ,CACjE,CACA,SAAS,iBAAiB,mBAAoB,IAC5CnB,EAAqB,EAAG,KAAK,IAAM,CACjCoC,GACJ,CAAG,CACH"}