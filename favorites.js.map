{"version":3,"file":"favorites.js","sources":["../src/img/raccoon-sad-fav.png","../src/js/favorites.js"],"sourcesContent":["export default \"__VITE_ASSET__wkelZeLu__\"","\nimport racoon from '../img/raccoon-sad-fav.png';\n\n\n\nconst messageContainer = document.getElementById('message-container'); // to select message container\nlet currentCategory = 'All Categories';\nlet previousSelectedButton = null;\nlet currentPage = 1;\nconst recipesPerPage = 12;\nimport { openModal, initModal } from './modal.js';\n\n\n// to fetch ids from local storage\nfunction getFavoriteIds() {\n    const favArrString = localStorage.getItem('favArr');\n    return favArrString ? JSON.parse(favArrString) : [];\n}\n\n// async function to fetch data \nasync function fetchById(id) {\n    try {\n        const response = await fetch(`https://tasty-treats-backend.p.goit.global/api/recipes/${id}`);\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const recipe = await response.json();\n        return recipe;\n    } catch (error) {\n        console.error('Error fetching recipe by ID:', error);\n        return null;\n    }\n}\n\n// to fetch all recipes that user selected as favorite\nasync function fetchFavorites() {\n    const favoriteIds = getFavoriteIds();\n    try {\n        const recipes = await Promise.all(favoriteIds.map(id => fetchById(id)));\n        return recipes.filter(recipe => recipe !== null);\n    } catch (error) {\n        console.error('Error fetching favorite recipes:', error);\n        return [];\n    }\n}\n\nfunction addRecipeButtonListeners() {\n    const recipeButtons = document.querySelectorAll('.recipe-button');\n    recipeButtons.forEach(button => {\n        button.addEventListener('click', function () {\n            const recipeId = this.getAttribute('data-id');\n            openModal(recipeId);\n        });\n    });\n}\n\n\n// to display recipes \nasync function renderFavoriteRecipes(page = 1) {\n    const recipes = await fetchFavorites();\n    currentPage = page;\n\n    if (recipes.length === 0) {\n        // Display a message if no favorite recipes are found\n        messageContainer.innerHTML = `\n        <div class=\"fav-message-container\">\n            <img src=\"${racoon}\" class=\"fav-raccoon\">\n            <p class=\"fav-message\">It appears that you haven't added any recipes to your favorites yet. To get started, you can add recipes that you like to your favorites for easier access in the future.</p>\n            <img src=\"${racoon}\" class=\"fav-chefs-hat\">\n        </div>\n        `;\n        const paginationContainer = document.querySelector('.pagination');\n        paginationContainer.innerHTML = '';\n\n    } else {\n        // Extract categories from recipes and store in local storage\n        const categories = [...new Set(recipes.map(recipe => recipe.category))];\n        localStorage.setItem('favArrCategory', JSON.stringify(categories));\n\n        renderCategoryNames();\n        renderRecipes(recipes, page);\n        renderPaginationControls(recipes.length, page);\n        addRecipeButtonListeners();\n    }\n}\n\nfunction renderRecipes(recipes, page) {\n    const favoriteCards = document.querySelector('.favorite-cards');\n    favoriteCards.innerHTML = '';\n\n    const start = (page - 1) * recipesPerPage;\n    const end = start + recipesPerPage;\n    const recipesToDisplay = recipes.slice(start, end);\n\n    recipesToDisplay.forEach(recipe => {\n        const filledStars = Math.round(recipe.rating);\n        const emptyStars = 5 - filledStars;\n        const cardHTML = `\n        <li class=\"cards-listing\" style=\"background-image: url(${recipe.preview});\">\n            <button class=\"heard-button\" data-category=\"${recipe.category}\" data-id=\"${recipe._id}\" aria-label=\"like-btn\">\n                <svg class=\"svg-heard add-to-fav\" data-id=\"${recipe._id}\" width=\"22px\" height=\"22px\">\n                    <use href=\"./svg/sprite.svg#icon-heart-filled\"></use>\n                </svg>\n            </button>\n            <div class=\"card-content-container\">\n                <div class=\"text-container\">\n                    <h3 class=\"card-title\">${recipe.title}</h3>\n                    <p class=\"specification-text\">${recipe.description}</p>\n                </div>\n                <div class=\"card-rating-container\">\n                    <div class=\"rating-container\">\n                        <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                        <div class=\"star-container\">\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"./svg/sprite.svg#icon-star\"></use>\n                            </svg>`.repeat(filledStars)}\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"./svg/sprite.svg#icon-emptystar\"></use>\n                            </svg>`.repeat(emptyStars)}\n                        </div>    \n                    </div>\n                    <button class=\"recipe-button\" data-id=\"${recipe._id}\">See recipe</button>\n                </div>      \n            </div>\n        </li>\n        `;\n        favoriteCards.innerHTML += cardHTML;\n    });\n\n    favoritesHeartBtn();\n    addHeartButtonListeners();\n}\n\nfunction renderPaginationControls(totalRecipes, currentPage, category = 'All Categories') {\n    const totalPages = Math.ceil(totalRecipes / recipesPerPage);\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = `\n        <div class=\"left-arrow-container\">\n            <button id=\"doubleLeft\" class=\"pagination-btn left-end\" ${currentPage === 1 ? 'disabled' : ''}>\n                &laquo;\n            </button>\n            <button id=\"singleLeft\" class=\"pagination-btn left-one\" ${currentPage === 1 ? 'disabled' : ''}>\n                &lsaquo;\n            </button>\n        </div>\n        <div class=\"number-container\">\n        </div>\n        <div class=\"right-arrow-container\">\n            <button id=\"singleRight\" class=\"right-one pagination-btn\" ${currentPage === totalPages ? 'disabled' : ''}>\n                &rsaquo;\n            </button>\n            <button id=\"doubleRight\" class=\"right-end pagination-btn\" ${currentPage === totalPages ? 'disabled' : ''}>\n                &raquo;\n            </button>\n        </div>\n    `;\n\n    const numberContainer = paginationContainer.querySelector('.number-container');\n\n    for (let i = 1; i <= totalPages; i++) {\n        const pageButton = document.createElement('button');\n        pageButton.textContent = i;\n        pageButton.classList.add('pagination-btn', 'page-number');\n        if (i === currentPage) {\n            pageButton.classList.add('active-page');\n        }\n        pageButton.addEventListener('click', () => {\n            if (category === 'All Categories') {\n                renderFavoriteRecipes(i);\n            } else {\n                filterRecipesByCategory(category, i);\n            }\n        });\n        numberContainer.appendChild(pageButton);\n    }\n\n    // Add event listeners for the arrow buttons\n    paginationContainer.querySelector('#doubleLeft').addEventListener('click', () => {\n        if (category === 'All Categories') {\n            renderFavoriteRecipes(1);\n        } else {\n            filterRecipesByCategory(category, 1);\n        }\n    });\n\n    paginationContainer.querySelector('#singleLeft').addEventListener('click', () => {\n        if (category === 'All Categories') {\n            renderFavoriteRecipes(currentPage - 1);\n        } else {\n            filterRecipesByCategory(category, currentPage - 1);\n        }\n    });\n\n    paginationContainer.querySelector('#singleRight').addEventListener('click', () => {\n        if (category === 'All Categories') {\n            renderFavoriteRecipes(currentPage + 1);\n        } else {\n            filterRecipesByCategory(category, currentPage + 1);\n        }\n    });\n\n    paginationContainer.querySelector('#doubleRight').addEventListener('click', () => {\n        if (category === 'All Categories') {\n            renderFavoriteRecipes(totalPages);\n        } else {\n            filterRecipesByCategory(category, totalPages);\n        }\n    });\n}\nfunction favoritesHeartBtn() {\n    const likeButtons = document.querySelectorAll('.heard-button');\n    likeButtons.forEach(button => {\n        button.addEventListener('click', async function () {\n            const recipeId = button.dataset.id;\n            const recipeCategory = button.dataset.category;\n            const favArrString = localStorage.getItem('favArr');\n            let favArr = favArrString ? JSON.parse(favArrString) : [];\n\n            if (favArr.includes(recipeId)) {\n                favArr.splice(favArr.indexOf(recipeId), 1);\n                localStorage.setItem('favArr', JSON.stringify(favArr));\n            }\n\n            // Fetch all favorite recipes to check categories\n            const recipes = await fetchFavorites();\n\n            // Check if there are any remaining recipes of the same category\n            const remainingRecipes = recipes.filter(recipe => recipe.category === recipeCategory);\n\n            if (remainingRecipes.length === 0) {\n                const favArrCategoryString = localStorage.getItem('favArrCategory');\n                let favArrCategory = favArrCategoryString ? JSON.parse(favArrCategoryString) : [];\n\n                if (favArrCategory.includes(recipeCategory)) {\n                    favArrCategory.splice(favArrCategory.indexOf(recipeCategory), 1);\n                    localStorage.setItem('favArrCategory', JSON.stringify(favArrCategory));\n                }\n\n                // Switch to \"All Categories\" if the current category becomes empty\n                currentCategory = 'All Categories';\n                if (previousSelectedButton) {\n                    previousSelectedButton.style.backgroundColor = '';\n                    previousSelectedButton.style.color = '';\n                    previousSelectedButton.style.border = '';\n                }\n                const allCategoriesButton = document.querySelector('.fav-categories-list button:first-child');\n                allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n                allCategoriesButton.style.color = '#fff';\n                allCategoriesButton.style.border = '1px solid var(--primary-color)';\n                previousSelectedButton = allCategoriesButton;\n            }\n\n            renderCategoryNames();\n            if (currentCategory === 'All Categories') {\n                renderFavoriteRecipes();\n            } else {\n                filterRecipesByCategory(currentCategory);\n            }\n        });\n    });\n}\nfunction addHeartButtonListeners() {\n    const likeButtons = document.querySelectorAll('.heard-button');\n    let favCategoryArr = [];\n    likeButtons.forEach(button => {\n        if (!favCategoryArr.includes(button.dataset.category)) {\n            favCategoryArr.push(button.dataset.category);\n        }\n    });\n    favCategoryArr.sort();\n}\n\nfunction renderCategoryNames() {\n    const favCategoriesList = document.querySelector('.fav-categories-list');\n    const favArrCategoryString = localStorage.getItem('favArrCategory');\n    let favArrCategory = favArrCategoryString ? JSON.parse(favArrCategoryString) : [];\n    favCategoriesList.innerHTML = '';\n\n    const allCategoriesLi = document.createElement('li');\n    const allCategoriesButton = document.createElement('button');\n    allCategoriesButton.textContent = 'All Categories';\n    allCategoriesButton.classList.add('category-button');\n    allCategoriesButton.addEventListener('click', () => {\n        currentCategory = 'All Categories';\n        if (previousSelectedButton) {\n            previousSelectedButton.style.backgroundColor = '';\n            previousSelectedButton.style.color = '';\n            previousSelectedButton.style.border = '';\n        }\n        allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n        allCategoriesButton.style.color = '#fff';\n        allCategoriesButton.style.border = '1px solid var(--primary-color)';\n        previousSelectedButton = allCategoriesButton;\n        renderFavoriteRecipes();\n    });\n    allCategoriesLi.appendChild(allCategoriesButton);\n    favCategoriesList.appendChild(allCategoriesLi);\n\n    favArrCategory.forEach(category => {\n        const li = document.createElement('li');\n        const button = document.createElement('button');\n        button.textContent = category;\n        button.classList.add('category-button');\n        button.addEventListener('click', () => {\n            currentCategory = category;\n            if (previousSelectedButton) {\n                previousSelectedButton.style.backgroundColor = '';\n                previousSelectedButton.style.color = '';\n                previousSelectedButton.style.border = '';\n            }\n            button.style.backgroundColor = 'var(--primary-color)';\n            button.style.color = '#fff';\n            button.style.border = '1px solid var(--primary-color)';\n            previousSelectedButton = button;\n            filterRecipesByCategory(category);\n        });\n        li.appendChild(button);\n        favCategoriesList.appendChild(li);\n    });\n}\n\nasync function filterRecipesByCategory(category, page = 1) {\n    const recipes = await fetchFavorites();\n    const filteredRecipes = recipes.filter(recipe => recipe.category === category);\n    renderRecipes(filteredRecipes, page);\n    renderPaginationControls(filteredRecipes.length, page, category);\n}\ndocument.addEventListener('DOMContentLoaded', () => renderFavoriteRecipes().then(() => {\n    initModal();\n})\n);"],"names":["racoon","messageContainer","currentCategory","previousSelectedButton","recipesPerPage","getFavoriteIds","favArrString","fetchById","id","response","error","fetchFavorites","favoriteIds","recipe","addRecipeButtonListeners","button","recipeId","openModal","renderFavoriteRecipes","page","recipes","paginationContainer","categories","renderCategoryNames","renderRecipes","renderPaginationControls","favoriteCards","start","end","filledStars","emptyStars","cardHTML","favoritesHeartBtn","addHeartButtonListeners","totalRecipes","currentPage","category","totalPages","numberContainer","i","pageButton","filterRecipesByCategory","recipeCategory","favArr","favArrCategoryString","favArrCategory","allCategoriesButton","likeButtons","favCategoryArr","favCategoriesList","allCategoriesLi","li","filteredRecipes","initModal"],"mappings":"sDAAA,MAAeA,EAAA,oDCKTC,EAAmB,SAAS,eAAe,mBAAmB,EACpE,IAAIC,EAAkB,iBAClBC,EAAyB,KAE7B,MAAMC,EAAiB,GAKvB,SAASC,GAAiB,CACtB,MAAMC,EAAe,aAAa,QAAQ,QAAQ,EAClD,OAAOA,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAA,CACrD,CAGA,eAAeC,EAAUC,EAAI,CACzB,GAAI,CACA,MAAMC,EAAW,MAAM,MAAM,0DAA0DD,CAAE,EAAE,EAC3F,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAGjD,OADe,MAAMA,EAAS,MAEjC,OAAQC,EAAO,CACZ,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,IACV,CACL,CAGA,eAAeC,GAAiB,CAC5B,MAAMC,EAAcP,IACpB,GAAI,CAEA,OADgB,MAAM,QAAQ,IAAIO,EAAY,IAAIJ,GAAMD,EAAUC,CAAE,CAAC,CAAC,GACvD,OAAOK,GAAUA,IAAW,IAAI,CAClD,OAAQH,EAAO,CACZ,eAAQ,MAAM,mCAAoCA,CAAK,EAChD,EACV,CACL,CAEA,SAASI,GAA2B,CACV,SAAS,iBAAiB,gBAAgB,EAClD,QAAQC,GAAU,CAC5BA,EAAO,iBAAiB,QAAS,UAAY,CACzC,MAAMC,EAAW,KAAK,aAAa,SAAS,EAC5CC,EAAUD,CAAQ,CAC9B,CAAS,CACT,CAAK,CACL,CAIA,eAAeE,EAAsBC,EAAO,EAAG,CAC3C,MAAMC,EAAU,MAAMT,IAGtB,GAAIS,EAAQ,SAAW,EAAG,CAEtBnB,EAAiB,UAAY;AAAA;AAAA,wBAEbD,CAAM;AAAA;AAAA,wBAENA,CAAM;AAAA;AAAA,UAGtB,MAAMqB,EAAsB,SAAS,cAAc,aAAa,EAChEA,EAAoB,UAAY,EAExC,KAAW,CAEH,MAAMC,EAAa,CAAC,GAAG,IAAI,IAAIF,EAAQ,IAAIP,GAAUA,EAAO,QAAQ,CAAC,CAAC,EACtE,aAAa,QAAQ,iBAAkB,KAAK,UAAUS,CAAU,CAAC,EAEjEC,IACAC,EAAcJ,EAASD,CAAI,EAC3BM,EAAyBL,EAAQ,OAAQD,CAAI,EAC7CL,GACH,CACL,CAEA,SAASU,EAAcJ,EAASD,EAAM,CAClC,MAAMO,EAAgB,SAAS,cAAc,iBAAiB,EAC9DA,EAAc,UAAY,GAE1B,MAAMC,GAASR,EAAO,GAAKf,EACrBwB,EAAMD,EAAQvB,EACKgB,EAAQ,MAAMO,EAAOC,CAAG,EAEhC,QAAQf,GAAU,CAC/B,MAAMgB,EAAc,KAAK,MAAMhB,EAAO,MAAM,EACtCiB,EAAa,EAAID,EACjBE,EAAW;AAAA,iEACwClB,EAAO,OAAO;AAAA,0DACrBA,EAAO,QAAQ,cAAcA,EAAO,GAAG;AAAA,6DACpCA,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAM1BA,EAAO,KAAK;AAAA,oDACLA,EAAO,WAAW;AAAA;AAAA;AAAA;AAAA,iDAIrBA,EAAO,OAAO,QAAQ,CAAC,CAAC;AAAA;AAAA,8BAE3C;AAAA;AAAA,oCAEM,OAAOgB,CAAW,CAAC;AAAA,8BACzB;AAAA;AAAA,oCAEM,OAAOC,CAAU,CAAC;AAAA;AAAA;AAAA,6DAGOjB,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA,UAK/Da,EAAc,WAAaK,CACnC,CAAK,EAEDC,IACAC,GACJ,CAEA,SAASR,EAAyBS,EAAcC,EAAaC,EAAW,iBAAkB,CACtF,MAAMC,EAAa,KAAK,KAAKH,EAAe9B,CAAc,EACpDiB,EAAsB,SAAS,cAAc,aAAa,EAChEA,EAAoB,UAAY;AAAA;AAAA,sEAEkCc,IAAgB,EAAI,WAAa,EAAE;AAAA;AAAA;AAAA,sEAGnCA,IAAgB,EAAI,WAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAOjCA,IAAgBE,EAAa,WAAa,EAAE;AAAA;AAAA;AAAA,wEAG5CF,IAAgBE,EAAa,WAAa,EAAE;AAAA;AAAA;AAAA;AAAA,MAMhH,MAAMC,EAAkBjB,EAAoB,cAAc,mBAAmB,EAE7E,QAASkB,EAAI,EAAGA,GAAKF,EAAYE,IAAK,CAClC,MAAMC,EAAa,SAAS,cAAc,QAAQ,EAClDA,EAAW,YAAcD,EACzBC,EAAW,UAAU,IAAI,iBAAkB,aAAa,EACpDD,IAAMJ,GACNK,EAAW,UAAU,IAAI,aAAa,EAE1CA,EAAW,iBAAiB,QAAS,IAAM,CACnCJ,IAAa,iBACblB,EAAsBqB,CAAC,EAEvBE,EAAwBL,EAAUG,CAAC,CAEnD,CAAS,EACDD,EAAgB,YAAYE,CAAU,CACzC,CAGDnB,EAAoB,cAAc,aAAa,EAAE,iBAAiB,QAAS,IAAM,CACzEe,IAAa,iBACblB,EAAsB,CAAC,EAEvBuB,EAAwBL,EAAU,CAAC,CAE/C,CAAK,EAEDf,EAAoB,cAAc,aAAa,EAAE,iBAAiB,QAAS,IAAM,CACzEe,IAAa,iBACblB,EAAsBiB,EAAc,CAAC,EAErCM,EAAwBL,EAAUD,EAAc,CAAC,CAE7D,CAAK,EAEDd,EAAoB,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAC1Ee,IAAa,iBACblB,EAAsBiB,EAAc,CAAC,EAErCM,EAAwBL,EAAUD,EAAc,CAAC,CAE7D,CAAK,EAEDd,EAAoB,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAC1Ee,IAAa,iBACblB,EAAsBmB,CAAU,EAEhCI,EAAwBL,EAAUC,CAAU,CAExD,CAAK,CACL,CACA,SAASL,GAAoB,CACL,SAAS,iBAAiB,eAAe,EACjD,QAAQjB,GAAU,CAC1BA,EAAO,iBAAiB,QAAS,gBAAkB,CAC/C,MAAMC,EAAWD,EAAO,QAAQ,GAC1B2B,EAAiB3B,EAAO,QAAQ,SAChCT,EAAe,aAAa,QAAQ,QAAQ,EAClD,IAAIqC,EAASrC,EAAe,KAAK,MAAMA,CAAY,EAAI,GAavD,GAXIqC,EAAO,SAAS3B,CAAQ,IACxB2B,EAAO,OAAOA,EAAO,QAAQ3B,CAAQ,EAAG,CAAC,EACzC,aAAa,QAAQ,SAAU,KAAK,UAAU2B,CAAM,CAAC,IAIzC,MAAMhC,KAGW,OAAOE,GAAUA,EAAO,WAAa6B,CAAc,EAE/D,SAAW,EAAG,CAC/B,MAAME,EAAuB,aAAa,QAAQ,gBAAgB,EAClE,IAAIC,EAAiBD,EAAuB,KAAK,MAAMA,CAAoB,EAAI,GAE3EC,EAAe,SAASH,CAAc,IACtCG,EAAe,OAAOA,EAAe,QAAQH,CAAc,EAAG,CAAC,EAC/D,aAAa,QAAQ,iBAAkB,KAAK,UAAUG,CAAc,CAAC,GAIzE3C,EAAkB,iBACdC,IACAA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAE1C,MAAM2C,EAAsB,SAAS,cAAc,yCAAyC,EAC5FA,EAAoB,MAAM,gBAAkB,uBAC5CA,EAAoB,MAAM,MAAQ,OAClCA,EAAoB,MAAM,OAAS,iCACnC3C,EAAyB2C,CAC5B,CAEDvB,IACIrB,IAAoB,iBACpBgB,IAEAuB,EAAwBvC,CAAe,CAEvD,CAAS,CACT,CAAK,CACL,CACA,SAAS+B,GAA0B,CAC/B,MAAMc,EAAc,SAAS,iBAAiB,eAAe,EAC7D,IAAIC,EAAiB,CAAA,EACrBD,EAAY,QAAQhC,GAAU,CACrBiC,EAAe,SAASjC,EAAO,QAAQ,QAAQ,GAChDiC,EAAe,KAAKjC,EAAO,QAAQ,QAAQ,CAEvD,CAAK,EACDiC,EAAe,KAAI,CACvB,CAEA,SAASzB,GAAsB,CAC3B,MAAM0B,EAAoB,SAAS,cAAc,sBAAsB,EACjEL,EAAuB,aAAa,QAAQ,gBAAgB,EAClE,IAAIC,EAAiBD,EAAuB,KAAK,MAAMA,CAAoB,EAAI,GAC/EK,EAAkB,UAAY,GAE9B,MAAMC,EAAkB,SAAS,cAAc,IAAI,EAC7CJ,EAAsB,SAAS,cAAc,QAAQ,EAC3DA,EAAoB,YAAc,iBAClCA,EAAoB,UAAU,IAAI,iBAAiB,EACnDA,EAAoB,iBAAiB,QAAS,IAAM,CAChD5C,EAAkB,iBACdC,IACAA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAE1C2C,EAAoB,MAAM,gBAAkB,uBAC5CA,EAAoB,MAAM,MAAQ,OAClCA,EAAoB,MAAM,OAAS,iCACnC3C,EAAyB2C,EACzB5B,GACR,CAAK,EACDgC,EAAgB,YAAYJ,CAAmB,EAC/CG,EAAkB,YAAYC,CAAe,EAE7CL,EAAe,QAAQT,GAAY,CAC/B,MAAMe,EAAK,SAAS,cAAc,IAAI,EAChCpC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,YAAcqB,EACrBrB,EAAO,UAAU,IAAI,iBAAiB,EACtCA,EAAO,iBAAiB,QAAS,IAAM,CACnCb,EAAkBkC,EACdjC,IACAA,EAAuB,MAAM,gBAAkB,GAC/CA,EAAuB,MAAM,MAAQ,GACrCA,EAAuB,MAAM,OAAS,IAE1CY,EAAO,MAAM,gBAAkB,uBAC/BA,EAAO,MAAM,MAAQ,OACrBA,EAAO,MAAM,OAAS,iCACtBZ,EAAyBY,EACzB0B,EAAwBL,CAAQ,CAC5C,CAAS,EACDe,EAAG,YAAYpC,CAAM,EACrBkC,EAAkB,YAAYE,CAAE,CACxC,CAAK,CACL,CAEA,eAAeV,EAAwBL,EAAUjB,EAAO,EAAG,CAEvD,MAAMiC,GADU,MAAMzC,KACU,OAAOE,GAAUA,EAAO,WAAauB,CAAQ,EAC7EZ,EAAc4B,EAAiBjC,CAAI,EACnCM,EAAyB2B,EAAgB,OAAQjC,EAAMiB,CAAQ,CACnE,CACA,SAAS,iBAAiB,mBAAoB,IAAMlB,EAAuB,EAAC,KAAK,IAAM,CACnFmC,GACJ,CAAC,CACD"}