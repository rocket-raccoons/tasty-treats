{"version":3,"file":"favorites.js","sources":["../src/img/raccoon-sad-fav.png","../src/js/favorites.js"],"sourcesContent":["export default \"__VITE_ASSET__wkelZeLu__\"","import racoon from '../img/raccoon-sad-fav.png';\nimport sprite from '../svg/sprite.svg';\n\nconst messageContainer = document.getElementById('message-container'); // to select message container\nlet currentCategory = 'All Categories';\nlet previousSelectedButton = null;\nlet currentPage = 1;\nconst recipesPerPage = 12;\nimport { openModal, initModal } from './modal.js';\n\n// to fetch ids from local storage\nfunction getFavoriteIds() {\n  const favArrString = localStorage.getItem('favArr');\n  return favArrString ? JSON.parse(favArrString) : [];\n}\n\n// async function to fetch data\nasync function fetchById(id) {\n  try {\n    const response = await fetch(\n      `https://tasty-treats-backend.p.goit.global/api/recipes/${id}`\n    );\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const recipe = await response.json();\n    return recipe;\n  } catch (error) {\n    console.error('Error fetching recipe by ID:', error);\n    return null;\n  }\n}\n\n// to fetch all recipes that user selected as favorite\nasync function fetchFavorites() {\n  const favoriteIds = getFavoriteIds();\n  try {\n    const recipes = await Promise.all(favoriteIds.map(id => fetchById(id)));\n    return recipes.filter(recipe => recipe !== null);\n  } catch (error) {\n    console.error('Error fetching favorite recipes:', error);\n    return [];\n  }\n}\n\nfunction addRecipeButtonListeners() {\n  const recipeButtons = document.querySelectorAll('.recipe-button');\n  recipeButtons.forEach(button => {\n    button.addEventListener('click', function () {\n      const recipeId = this.getAttribute('data-id');\n      openModal(recipeId);\n    });\n  });\n}\n\n// to display recipes\nasync function renderFavoriteRecipes(page = 1) {\n  const recipes = await fetchFavorites();\n  currentPage = page;\n\n  if (recipes.length === 0) {\n    // Display a message if no favorite recipes are found\n    messageContainer.innerHTML = `\n        <div class=\"fav-message-container\">\n            <img src=\"${racoon}\" class=\"fav-raccoon\">\n            <p class=\"fav-message\">It appears that you haven't added any recipes to your favorites yet. To get started, you can add recipes that you like to your favorites for easier access in the future.</p>\n            <img src=\"${racoon}\" class=\"fav-chefs-hat\">\n        </div>\n        `;\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = '';\n  } else {\n    // Extract categories from recipes and store in local storage\n    const categories = [...new Set(recipes.map(recipe => recipe.category))];\n    localStorage.setItem('favArrCategory', JSON.stringify(categories));\n\n    renderCategoryNames();\n    renderRecipes(recipes, page);\n    renderPaginationControls(recipes.length, page);\n    addRecipeButtonListeners();\n  }\n}\n\nfunction renderRecipes(recipes, page) {\n  const favoriteCards = document.querySelector('.favorite-cards');\n  favoriteCards.innerHTML = '';\n\n  const start = (page - 1) * recipesPerPage;\n  const end = start + recipesPerPage;\n  const recipesToDisplay = recipes.slice(start, end);\n\n  recipesToDisplay.forEach(recipe => {\n    const filledStars = Math.round(recipe.rating);\n    const emptyStars = 5 - filledStars;\n    const cardHTML = `\n        <li class=\"cards-listing\" style=\"background-image: url(${\n          recipe.preview\n        });\">\n            <button class=\"heard-button\" data-category=\"${\n              recipe.category\n            }\" data-id=\"${recipe._id}\" aria-label=\"like-btn\">\n                <svg class=\"svg-heard add-to-fav\" data-id=\"${\n                  recipe._id\n                }\" width=\"22px\" height=\"22px\">\n                    <use href=\"${sprite}#icon-heart-filled\"></use>\n                </svg>\n            </button>\n            <div class=\"card-content-container\">\n                <div class=\"text-container\">\n                    <h3 class=\"card-title\">${recipe.title}</h3>\n                    <p class=\"specification-text\">${recipe.description}</p>\n                </div>\n                <div class=\"card-rating-container\">\n                    <div class=\"rating-container\">\n                        <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                        <div class=\"star-container\">\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"${sprite}#icon-star\"></use>\n                            </svg>`.repeat(filledStars)}\n                            ${`<svg class=\"card-star-svg\">\n                            <use href=\"${sprite}#icon-emptystar\"></use>\n                            </svg>`.repeat(emptyStars)}\n                        </div>    \n                    </div>\n                    <button class=\"recipe-button\" data-id=\"${\n                      recipe._id\n                    }\">See recipe</button>\n                </div>      \n            </div>\n        </li>\n        `;\n    favoriteCards.innerHTML += cardHTML;\n  });\n\n  favoritesHeartBtn();\n  addHeartButtonListeners();\n}\n\nfunction renderPaginationControls(\n  totalRecipes,\n  currentPage,\n  category = 'All Categories'\n) {\n  const totalPages = Math.ceil(totalRecipes / recipesPerPage);\n  const paginationContainer = document.querySelector('.pagination');\n  paginationContainer.innerHTML = `\n        <div class=\"left-arrow-container\">\n            <button id=\"doubleLeft\" class=\"pagination-btn left-end\" ${\n              currentPage === 1 ? 'disabled' : ''\n            }>\n                &laquo;\n            </button>\n            <button id=\"singleLeft\" class=\"pagination-btn left-one\" ${\n              currentPage === 1 ? 'disabled' : ''\n            }>\n                &lsaquo;\n            </button>\n        </div>\n        <div class=\"number-container\">\n        </div>\n        <div class=\"right-arrow-container\">\n            <button id=\"singleRight\" class=\"right-one pagination-btn\" ${\n              currentPage === totalPages ? 'disabled' : ''\n            }>\n                &rsaquo;\n            </button>\n            <button id=\"doubleRight\" class=\"right-end pagination-btn\" ${\n              currentPage === totalPages ? 'disabled' : ''\n            }>\n                &raquo;\n            </button>\n        </div>\n    `;\n\n  const numberContainer =\n    paginationContainer.querySelector('.number-container');\n\n  for (let i = 1; i <= totalPages; i++) {\n    const pageButton = document.createElement('button');\n    pageButton.textContent = i;\n    pageButton.classList.add('pagination-btn', 'page-number');\n    if (i === currentPage) {\n      pageButton.classList.add('active-page');\n    }\n    pageButton.addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(i);\n      } else {\n        filterRecipesByCategory(category, i);\n      }\n    });\n    numberContainer.appendChild(pageButton);\n  }\n\n  // Add event listeners for the arrow buttons\n  paginationContainer\n    .querySelector('#doubleLeft')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(1);\n      } else {\n        filterRecipesByCategory(category, 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#singleLeft')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(currentPage - 1);\n      } else {\n        filterRecipesByCategory(category, currentPage - 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#singleRight')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(currentPage + 1);\n      } else {\n        filterRecipesByCategory(category, currentPage + 1);\n      }\n    });\n\n  paginationContainer\n    .querySelector('#doubleRight')\n    .addEventListener('click', () => {\n      if (category === 'All Categories') {\n        renderFavoriteRecipes(totalPages);\n      } else {\n        filterRecipesByCategory(category, totalPages);\n      }\n    });\n}\nfunction favoritesHeartBtn() {\n  const likeButtons = document.querySelectorAll('.heard-button');\n  likeButtons.forEach(button => {\n    button.addEventListener('click', async function () {\n      const recipeId = button.dataset.id;\n      const recipeCategory = button.dataset.category;\n      const favArrString = localStorage.getItem('favArr');\n      let favArr = favArrString ? JSON.parse(favArrString) : [];\n\n      if (favArr.includes(recipeId)) {\n        favArr.splice(favArr.indexOf(recipeId), 1);\n        localStorage.setItem('favArr', JSON.stringify(favArr));\n      }\n\n      // Fetch all favorite recipes to check categories\n      const recipes = await fetchFavorites();\n\n      // Check if there are any remaining recipes of the same category\n      const remainingRecipes = recipes.filter(\n        recipe => recipe.category === recipeCategory\n      );\n\n      if (remainingRecipes.length === 0) {\n        const favArrCategoryString = localStorage.getItem('favArrCategory');\n        let favArrCategory = favArrCategoryString\n          ? JSON.parse(favArrCategoryString)\n          : [];\n\n        if (favArrCategory.includes(recipeCategory)) {\n          favArrCategory.splice(favArrCategory.indexOf(recipeCategory), 1);\n          localStorage.setItem(\n            'favArrCategory',\n            JSON.stringify(favArrCategory)\n          );\n        }\n\n        // Switch to \"All Categories\" if the current category becomes empty\n        currentCategory = 'All Categories';\n        if (previousSelectedButton) {\n          previousSelectedButton.style.backgroundColor = '';\n          previousSelectedButton.style.color = '';\n          previousSelectedButton.style.border = '';\n        }\n        const allCategoriesButton = document.querySelector(\n          '.fav-categories-list button:first-child'\n        );\n        allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n        allCategoriesButton.style.color = '#fff';\n        allCategoriesButton.style.border = '1px solid var(--primary-color)';\n        previousSelectedButton = allCategoriesButton;\n      }\n\n      renderCategoryNames();\n      if (currentCategory === 'All Categories') {\n        renderFavoriteRecipes();\n      } else {\n        filterRecipesByCategory(currentCategory);\n      }\n    });\n  });\n}\nfunction addHeartButtonListeners() {\n  const likeButtons = document.querySelectorAll('.heard-button');\n  let favCategoryArr = [];\n  likeButtons.forEach(button => {\n    if (!favCategoryArr.includes(button.dataset.category)) {\n      favCategoryArr.push(button.dataset.category);\n    }\n  });\n  favCategoryArr.sort();\n}\n\nfunction renderCategoryNames() {\n  const favCategoriesList = document.querySelector('.fav-categories-list');\n  const favArrCategoryString = localStorage.getItem('favArrCategory');\n  let favArrCategory = favArrCategoryString\n    ? JSON.parse(favArrCategoryString)\n    : [];\n  favCategoriesList.innerHTML = '';\n\n  const allCategoriesLi = document.createElement('li');\n  const allCategoriesButton = document.createElement('button');\n  allCategoriesButton.textContent = 'All Categories';\n  allCategoriesButton.classList.add('category-button');\n  allCategoriesButton.addEventListener('click', () => {\n    currentCategory = 'All Categories';\n    if (previousSelectedButton) {\n      previousSelectedButton.style.backgroundColor = '';\n      previousSelectedButton.style.color = '';\n      previousSelectedButton.style.border = '';\n    }\n    allCategoriesButton.style.backgroundColor = 'var(--primary-color)';\n    allCategoriesButton.style.color = '#fff';\n    allCategoriesButton.style.border = '1px solid var(--primary-color)';\n    previousSelectedButton = allCategoriesButton;\n    renderFavoriteRecipes();\n  });\n  allCategoriesLi.appendChild(allCategoriesButton);\n  favCategoriesList.appendChild(allCategoriesLi);\n\n  favArrCategory.forEach(category => {\n    const li = document.createElement('li');\n    const button = document.createElement('button');\n    button.textContent = category;\n    button.classList.add('category-button');\n    button.addEventListener('click', () => {\n      currentCategory = category;\n      if (previousSelectedButton) {\n        previousSelectedButton.style.backgroundColor = '';\n        previousSelectedButton.style.color = '';\n        previousSelectedButton.style.border = '';\n      }\n      button.style.backgroundColor = 'var(--primary-color)';\n      button.style.color = '#fff';\n      button.style.border = '1px solid var(--primary-color)';\n      previousSelectedButton = button;\n      filterRecipesByCategory(category);\n    });\n    li.appendChild(button);\n    favCategoriesList.appendChild(li);\n  });\n}\n\nasync function filterRecipesByCategory(category, page = 1) {\n  const recipes = await fetchFavorites();\n  const filteredRecipes = recipes.filter(\n    recipe => recipe.category === category\n  );\n  renderRecipes(filteredRecipes, page);\n  renderPaginationControls(filteredRecipes.length, page, category);\n}\ndocument.addEventListener('DOMContentLoaded', () =>\n  renderFavoriteRecipes().then(() => {\n    initModal();\n  })\n);\n"],"names":["racoon","messageContainer","document","getElementById","currentCategory","previousSelectedButton","async","fetchFavorites","favoriteIds","favArrString","localStorage","getItem","JSON","parse","getFavoriteIds","Promise","all","map","id","response","fetch","ok","Error","json","error","fetchById","filter","recipe","renderFavoriteRecipes","page","recipes","length","innerHTML","querySelector","categories","Set","category","setItem","stringify","renderRecipes","renderPaginationControls","querySelectorAll","forEach","button","addEventListener","recipeId","this","getAttribute","openModal","favoriteCards","start","end","slice","filledStars","Math","round","rating","emptyStars","cardHTML","preview","_id","sprite","title","description","toFixed","repeat","dataset","recipeCategory","favArr","includes","splice","indexOf","favArrCategoryString","favArrCategory","style","backgroundColor","color","border","allCategoriesButton","filterRecipesByCategory","likeButtons","favCategoryArr","push","sort","totalRecipes","currentPage","totalPages","ceil","paginationContainer","numberContainer","i","pageButton","createElement","textContent","classList","add","appendChild","renderCategoryNames","favCategoriesList","allCategoriesLi","li","filteredRecipes","then"],"mappings":"8DAAA,MAAeA,EAAA,oDCGTC,EAAmBC,SAASC,eAAe,qBACjD,IAAIC,EAAkB,iBAClBC,EAAyB,KA6B7BC,eAAeC,IACb,MAAMC,EAxBR,WACQ,MAAAC,EAAeC,aAAaC,QAAQ,UAC1C,OAAOF,EAAeG,KAAKC,MAAMJ,GAAgB,EACnD,CAqBsBK,GAChB,IAEF,aADsBC,QAAQC,IAAIR,EAAYS,KAAUC,GApB5DZ,eAAyBY,GACnB,IACF,MAAMC,QAAiBC,MACrB,0DAA0DF,KAExD,IAACC,EAASE,GACN,MAAA,IAAIC,MAAM,+BAGX,aADcH,EAASI,MAE/B,OAAQC,GAEA,OAAA,IACR,CACH,CAM4DC,CAAUP,OACnDQ,QAAiBC,GAAW,OAAXA,GACjC,OAAQH,GAEP,MAAO,EACR,CACH,CAaAlB,eAAesB,EAAsBC,EAAO,GACpC,MAAAC,QAAgBvB,IAGlB,GAAmB,IAAnBuB,EAAQC,OAAc,CAExB9B,EAAiB+B,UAAY,wEAEThC,oQAEAA,sDAGQE,SAAS+B,cAAc,eAC/BD,UAAY,EACpC,KAAS,CAEC,MAAAE,EAAa,IAAI,IAAIC,IAAIL,EAAQb,KAAcU,GAAAA,EAAOS,aAC5D1B,aAAa2B,QAAQ,iBAAkBzB,KAAK0B,UAAUJ,QAGtDK,EAAcT,EAASD,GACEW,EAAAV,EAAQC,OAAQF,GAhCrB3B,SAASuC,iBAAiB,kBAClCC,SAAkBC,IACvBA,EAAAC,iBAAiB,SAAS,WACzB,MAAAC,EAAWC,KAAKC,aAAa,WACnCC,EAAUH,EAChB,GAAK,GA6BF,CACH,CAEA,SAASN,EAAcT,EAASD,GACxB,MAAAoB,EAAgB/C,SAAS+B,cAAc,mBAC7CgB,EAAcjB,UAAY,GAEpB,MAAAkB,EAhFe,IAgFNrB,EAAO,GAChBsB,EAAMD,EAjFS,GAkFIpB,EAAQsB,MAAMF,EAAOC,GAE7BT,SAAkBf,IACjC,MAAM0B,EAAcC,KAAKC,MAAM5B,EAAO6B,QAChCC,EAAa,EAAIJ,EACjBK,EAAW,oEAEX/B,EAAOgC,wEAGHhC,EAAOS,sBACKT,EAAOiC,2FAEfjC,EAAOiC,oEAEQC,0NAKYlC,EAAOmC,iEACAnC,EAAOoC,oMAIVpC,EAAO6B,OAAOQ,QAAQ,6FAEzC,uEACWH,0DACLI,OAAOZ,mCACb,uEACWQ,+DACLI,OAAOR,kIAIrB9B,EAAOiC,sGAMzBX,EAAcjB,WAAa0B,CAAA,IAyGTxD,SAASuC,iBAAiB,iBAClCC,SAAkBC,IACrBA,EAAAC,iBAAiB,SAAStC,iBACzB,MAAAuC,EAAWF,EAAOuB,QAAQhD,GAC1BiD,EAAiBxB,EAAOuB,QAAQ9B,SAChC3B,EAAeC,aAAaC,QAAQ,UAC1C,IAAIyD,EAAS3D,EAAeG,KAAKC,MAAMJ,GAAgB,GAenD,GAbA2D,EAAOC,SAASxB,KAClBuB,EAAOE,OAAOF,EAAOG,QAAQ1B,GAAW,GACxCnC,aAAa2B,QAAQ,SAAUzB,KAAK0B,UAAU8B,KAWhB,WAPV7D,KAGWmB,QAC/BC,GAAUA,EAAOS,WAAa+B,IAGXpC,OAAc,CAC3B,MAAAyC,EAAuB9D,aAAaC,QAAQ,kBAClD,IAAI8D,EAAiBD,EACjB5D,KAAKC,MAAM2D,GACX,GAEAC,EAAeJ,SAASF,KAC1BM,EAAeH,OAAOG,EAAeF,QAAQJ,GAAiB,GACjDzD,aAAA2B,QACX,iBACAzB,KAAK0B,UAAUmC,KAKDrE,EAAA,iBACdC,IACFA,EAAuBqE,MAAMC,gBAAkB,GAC/CtE,EAAuBqE,MAAME,MAAQ,GACrCvE,EAAuBqE,MAAMG,OAAS,IAExC,MAAMC,EAAsB5E,SAAS+B,cACnC,2CAEF6C,EAAoBJ,MAAMC,gBAAkB,uBAC5CG,EAAoBJ,MAAME,MAAQ,OAClCE,EAAoBJ,MAAMG,OAAS,iCACVxE,EAAAyE,CAC1B,KAGuB,mBAApB1E,MAGF2E,EAAwB3E,EAEhC,GAAK,IAGL,WACQ,MAAA4E,EAAc9E,SAASuC,iBAAiB,iBAC9C,IAAIwC,EAAiB,GACrBD,EAAYtC,SAAkBC,IACvBsC,EAAeZ,SAAS1B,EAAOuB,QAAQ9B,WAC3B6C,EAAAC,KAAKvC,EAAOuB,QAAQ9B,SACpC,IAEH6C,EAAeE,MACjB,GAzKA,CAEA,SAAS3C,EACP4C,EACAC,EACAjD,EAAW,kBAEX,MAAMkD,EAAahC,KAAKiC,KAAKH,EAxIR,IAyIfI,EAAsBtF,SAAS+B,cAAc,eACnDuD,EAAoBxD,UAAY,qHAGJ,IAAhBqD,EAAoB,WAAa,4HAKjB,IAAhBA,EAAoB,WAAa,oPASjCA,IAAgBC,EAAa,WAAa,+HAK1CD,IAAgBC,EAAa,WAAa,4EAOhD,MAAAG,EACJD,EAAoBvD,cAAc,qBAEpC,IAAA,IAASyD,EAAI,EAAGA,GAAKJ,EAAYI,IAAK,CAC9B,MAAAC,EAAazF,SAAS0F,cAAc,UAC1CD,EAAWE,YAAcH,EACdC,EAAAG,UAAUC,IAAI,iBAAkB,eACvCL,IAAML,GACGM,EAAAG,UAAUC,IAAI,eAEhBJ,EAAA/C,iBAAiB,SAAS,KAClB,mBAAbR,EACFR,EAAsB8D,GAEtBX,EAAwB3C,EAAUsD,EACnC,IAEHD,EAAgBO,YAAYL,EAC7B,CAGDH,EACGvD,cAAc,eACdW,iBAAiB,SAAS,KACR,mBAAbR,EACFR,EAAsB,GAEtBmD,EAAwB3C,EAAU,EACnC,IAGLoD,EACGvD,cAAc,eACdW,iBAAiB,SAAS,KACR,mBAAbR,EACFR,EAAsByD,EAAc,GAEZN,EAAA3C,EAAUiD,EAAc,EACjD,IAGLG,EACGvD,cAAc,gBACdW,iBAAiB,SAAS,KACR,mBAAbR,EACFR,EAAsByD,EAAc,GAEZN,EAAA3C,EAAUiD,EAAc,EACjD,IAGLG,EACGvD,cAAc,gBACdW,iBAAiB,SAAS,KACR,mBAAbR,EACFR,EAAsB0D,GAEtBP,EAAwB3C,EAAUkD,EACnC,GAEP,CAyEA,SAASW,IACD,MAAAC,EAAoBhG,SAAS+B,cAAc,wBAC3CuC,EAAuB9D,aAAaC,QAAQ,kBAClD,IAAI8D,EAAiBD,EACjB5D,KAAKC,MAAM2D,GACX,GACJ0B,EAAkBlE,UAAY,GAExB,MAAAmE,EAAkBjG,SAAS0F,cAAc,MACzCd,EAAsB5E,SAAS0F,cAAc,UACnDd,EAAoBe,YAAc,iBACdf,EAAAgB,UAAUC,IAAI,mBACdjB,EAAAlC,iBAAiB,SAAS,KAC1BxC,EAAA,iBACdC,IACFA,EAAuBqE,MAAMC,gBAAkB,GAC/CtE,EAAuBqE,MAAME,MAAQ,GACrCvE,EAAuBqE,MAAMG,OAAS,IAExCC,EAAoBJ,MAAMC,gBAAkB,uBAC5CG,EAAoBJ,MAAME,MAAQ,OAClCE,EAAoBJ,MAAMG,OAAS,iCACVxE,EAAAyE,SAG3BqB,EAAgBH,YAAYlB,GAC5BoB,EAAkBF,YAAYG,GAE9B1B,EAAe/B,SAAoBN,IAC3B,MAAAgE,EAAKlG,SAAS0F,cAAc,MAC5BjD,EAASzC,SAAS0F,cAAc,UACtCjD,EAAOkD,YAAczD,EACdO,EAAAmD,UAAUC,IAAI,mBACdpD,EAAAC,iBAAiB,SAAS,KACbxC,EAAAgC,EACd/B,IACFA,EAAuBqE,MAAMC,gBAAkB,GAC/CtE,EAAuBqE,MAAME,MAAQ,GACrCvE,EAAuBqE,MAAMG,OAAS,IAExClC,EAAO+B,MAAMC,gBAAkB,uBAC/BhC,EAAO+B,MAAME,MAAQ,OACrBjC,EAAO+B,MAAMG,OAAS,iCACGxE,EAAAsC,EACzBoC,EAAwB3C,EAAQ,IAElCgE,EAAGJ,YAAYrD,GACfuD,EAAkBF,YAAYI,EAAE,GAEpC,CAEA9F,eAAeyE,EAAwB3C,EAAUP,EAAO,GAChD,MACAwE,SADgB9F,KACUmB,QAC9BC,GAAUA,EAAOS,WAAaA,IAEhCG,EAAc8D,EAAiBxE,GACNW,EAAA6D,EAAgBtE,OAAQF,EAAMO,EACzD,CACAlC,SAAS0C,iBAAiB,oBAAoB,IAC5ChB,IAAwB0E,MAAK"}