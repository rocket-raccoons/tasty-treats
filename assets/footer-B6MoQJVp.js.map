{"version":3,"file":"footer-B6MoQJVp.js","sources":["../../src/js/header/nav.js","../../src/svg/sprite.svg","../../src/js/form/custom-form.js","../../src/js/cards.js","../../src/js/modal.js","../../src/js/footer.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const themeToggle = document.getElementById('themeToggle');\n    const sideMenuThemeToggle = document.getElementById('sideMenuThemeToggle');\n    const mobileMenuToggle = document.getElementById('mobileMenuToggle');\n    const closeSideMenu = document.getElementById('closeSideMenu');\n    const sideMenu = document.getElementById('sideMenu');\n    const sunSideList = document.querySelectorAll('.sunSide');\n    const moonSideList = document.querySelectorAll('.moonSide');\n    const body = document.body;\n    function changedWeather(){\n        sunSideList.forEach((sunSide) => {\n            if(sunSide){\n                sunSide.classList.toggle('show');\n            }\n            \n        })\n        moonSideList.forEach((moonSide) => {\n            if(moonSide){\n                moonSide.classList.toggle('show');\n            }\n        })\n    }\n    function toggleDarkMode() {\n        body.classList.toggle('dark-mode');\n        themeToggle.classList.toggle('active');\n        sideMenuThemeToggle.classList.toggle('active');\n        changedWeather();\n        \n        const isDarkMode = body.classList.contains('dark-mode');\n        localStorage.setItem('darkMode', isDarkMode);\n    }\n\n    function toggleMobileMenu() { \n        if(!sideMenu.classList.contains('showSide')){\n            sideMenu.classList.add('showSide');\n        }\n        else{\n            sideMenu.classList.remove('showSide');\n        }\n    }\n    \n    themeToggle.addEventListener('click', toggleDarkMode);\n    sideMenuThemeToggle.addEventListener('click', toggleDarkMode);\n    mobileMenuToggle.addEventListener('click', toggleMobileMenu);\n    closeSideMenu.addEventListener('click', toggleMobileMenu);\n\n    const savedDarkMode = localStorage.getItem('darkMode');\n    if (savedDarkMode === 'true') {\n        body.classList.add('dark-mode');\n        themeToggle.classList.add('active');\n        sideMenuThemeToggle.classList.add('active');\n        changedWeather();\n    }\n\n    document.addEventListener('click', (event) => {\n        if (sideMenu.classList.contains('active') && !sideMenu.contains(event.target) && event.target !== mobileMenuToggle) {\n            sideMenu.classList.remove('active');\n        }\n    });\n});","export default \"__VITE_ASSET__B75pjiaY__\"","export const form = document.getElementById('filter-form');\nexport const timeOptions = document.getElementById('time-options');\nexport const areaOptions = document.getElementById('area-options');\nexport const ingrOptions = document.getElementById('ingredient-options');\nexport const timeTriggerText = document.getElementById('time-trigger-text');\nexport const areaTriggerText = document.getElementById('area-trigger-text');\nexport const ingrTriggerText = document.getElementById(\n  'ingredient-trigger-text'\n);\nexport const searchInput = document.getElementById('search');\nexport const cancelBtn = document.getElementById('cancel-btn');\nexport const resetBtn = document.getElementById('reset-filter-btn');\nexport const loader = document.getElementById('loader');\nexport const pagination = document.querySelector('.pagination');\n","import sprite from '../svg/sprite.svg';\nimport nothingGif from '../img/nothing.gif';\nimport iziToast from 'izitoast';\nimport { pagination } from './form/custom-form.js';\nimport { openModal, initModal, addModalFavListeners } from './modal.js';\nimport { add } from 'lodash';\n\nexport const cardsList = document.querySelector('.cards-list');\nexport let favArr = JSON.parse(localStorage.getItem('favArr')) || [];\n\n// This is a comment line\n\n// HTTP request for all recipes and display them\nexport async function fetchRecipes() {\n    try {\n        // Fetch recipe data from the API\n        const response = await fetch(\n            'https://tasty-treats-backend.p.goit.global/api/recipes?limit=9'\n        );\n        const data = await response.json();\n\n        // Call the function to display recipes\n        displayRecipes(data.results);\n        return data.totalPages;\n    } catch (error) {\n        iziToast.error({\n            title: '',\n            message: `Sorry! An error occurred while fetching recipes. Please try again!`,\n            position: 'topRight',\n        });\n\n        console.error('Error fetching API data:', error);\n        return 'error';\n    }\n}\n\n// Displaying recipes on the page\nexport function displayRecipes(recipes) {\n    const favArr = localStorage.getItem('favArr')\n        ? JSON.parse(localStorage.getItem('favArr'))\n        : [];\n\n    cardsList.innerHTML = '';\n    if (recipes.length === 0) {\n        cardsList.innerHTML = `\n    <div class=\"no-results-container\">\n      <p class=\"no-results-text\">Sorry! No results were found that match your filters.</p>\n      <img class=\"no-results\" src=\"${nothingGif}\"></img>\n    </div>`;\n        pagination.classList.add('hidden');\n    } else {\n        pagination.classList.remove('hidden');\n        recipes.forEach(recipe => {\n            // Create stars for rating\n            const filledStars = Math.round(recipe.rating);\n            const emptyStars = 5 - filledStars;\n\n            const cardHTML = `\n      <li class=\"cards-listing\" style=\"background-image: url(${recipe.preview\n                });\">\n      <button class=\"heard-button add-to-fav\" data-category=\"${recipe.category\n                }\" data-id=\"${recipe._id}\" aria-label=\"like-btn\">\n         <svg class=\"svg-heard add-to-fav\" data-id=\"${recipe._id\n                }\" width=\"22px\" height=\"22px\">\n            <use class=\"add-to-fav svguse\" href=\"${sprite}#${favArr.includes(recipe._id) ? 'icon-heart-filled' : 'icon-heart'\n                }\"></use>\n        </svg></button>\n\n      <div class=\"card-content-container\">\n         <div class=\"text-container\">\n            <h3 class=\"card-title\">${recipe.title}</h3>\n              <p class=\"specification-text\">${recipe.description}</p>\n          </div>\n\n          <div class=\"card-rating-container\">\n              <div class=\"rating-container\">\n                  <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                  <div class=\"star-container\">\n                    ${`<svg class=\"card-star-svg\">\n                    <use href=\"${sprite}#icon-star\"></use>\n                      </svg>`.repeat(filledStars)}\n\n                    ${`<svg class=\"card-star-svg\">\n                    <use href=\"${sprite}#icon-emptystar\"></use>\n                    </svg>`.repeat(emptyStars)}\n                  </div>    \n                </div>\n              \n            <button class=\"recipe-button\" data-id=\"${recipe._id\n                }\">See recipe</button>\n        </div>      \n      </li>\n    `;\n\n            cardsList.insertAdjacentHTML('beforeend', cardHTML);\n        });\n        addRecipeButtonListeners();\n    }\n}\n\n// Update the event listener for recipe buttons\nfunction addRecipeButtonListeners() {\n    const recipeButtons = document.querySelectorAll('.recipe-button');\n    recipeButtons.forEach(button => {\n        button.addEventListener('click', function () {\n            const recipeId = this.getAttribute('data-id');\n            openModal(recipeId);\n        });\n    });\n}\n\n// Updates local storage for fav recipes\nfunction updateLocalStorage() {\n    localStorage.setItem('favArr', JSON.stringify(favArr));\n}\n\n// Add or remove a recipe from favArr and update localStorage\nfunction addRemoveFav(e) {\n    const favButton = e.target.closest('.heard-button');\n    if (favButton) {\n        const id = favButton.dataset.id;\n        const emptyHeart = favButton.querySelector('.svguse');\n        if (favArr.includes(id)) {\n            favArr.splice(favArr.indexOf(id), 1);\n            emptyHeart.setAttribute('href', `${sprite}#icon-heart`);\n        } else {\n            favArr.push(id);\n            emptyHeart.setAttribute('href', `${sprite}#icon-heart-filled`);\n        }\n        localStorage.setItem('favArr', JSON.stringify(favArr)); // Update localStorage after changing favArr\n    }\n}\n\n// Initialize the page only if it's not the favorites page\nif (window.location.pathname !== '/tasty-treats/favorites.html') {\n    document.addEventListener('DOMContentLoaded', () => {\n        // Add event listener to cardsList for adding/removing favs\n        if (cardsList) {\n            cardsList.addEventListener('click', e => addRemoveFav(e));\n        }\n\n        setTimeout(() => {\n            fetchRecipes().then(() => {\n                addRecipeButtonListeners(); // Add listeners after recipes are loaded\n                initModal(); // Initialize modal functionality\n            });\n        }, 100);\n\n        // Initialize favArr from localStorage if it exists\n        const storedFavArr = localStorage.getItem('favArr');\n        if (storedFavArr) {\n            favArr = JSON.parse(storedFavArr);\n        }\n    });\n}\n// EXPORT FAV PAGE FUNCTION\nexport function getCardHTML(recipe) {\n    const filledStars = Math.round(recipe.rating);\n    const emptyStars = 5 - filledStars;\n    return `\n    <li class=\"cards-listing\" style=\"background-image: url(${recipe.preview})\">\n      <!-- ... (rest of the card HTML) ... -->\n    </li>\n  `;\n} // to export fav page","import sprite from '../svg/sprite.svg';\nimport { favArr } from './cards';\n// modal.js\nexport function initModal() {\n  const modal = document.getElementById('recipeModal');\n  const closeButton = modal.querySelector('.modal-close-button');\n\n  closeButton.onclick = closeModal;\n\n  window.onclick = function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  };\n\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape' && modal.style.display === 'block') {\n      closeModal();\n    }\n  });\n}\n\nexport async function openModal(recipeId) {\n  const modal = document.getElementById('recipeModal');\n  const modalContent = modal.querySelector('.modal-content');\n\n  // Show loading state\n  modalContent.innerHTML = '<p>Loading recipe details...</p>';\n  modal.style.display = 'block';\n\n  try {\n    const response = await fetch(\n      `https://tasty-treats-backend.p.goit.global/api/recipes/${recipeId}`\n    );\n    const recipe = await response.json();\n    const instructions = recipe.instructions.split('.').join('<br>');\n    const filledStars = Math.round(recipe.rating);\n    const emptyStars = 5 - filledStars;\n\n    // Update modal content with recipe details\n    modalContent.innerHTML = `\n        <div class= \"modal-heading\">\n          <div style=\"flex: 1;\">\n            <iframe class=\"modal-iframe\" src=\"https://www.youtube.com/embed/${new URL(\n              recipe.youtube\n            ).searchParams.get('v')}\" frameborder=\"0\" allowfullscreen></iframe>\n          </div>\n        <div class=\"modal-recipe-container\" style=\"flex: 1;\">\n        <h2>${recipe.title}</h2>\n        <div class=\"modal-rating-container\">\n        <div class=\"modal-star-container\">\n              <div class=\"rating-container\">\n                  <p class=\"rating-text\">${recipe.rating.toFixed(1)}</p>\n                  <div class=\"star-container\">\n                    ${`<svg class=\"card-star-svg\">\n                    <use href=\"${sprite}#icon-star\"></use>\n                      </svg>`.repeat(filledStars)}\n\n                    ${`<svg class=\"card-star-svg modal-empty-star\">\n                    <use href=\"${sprite}#icon-emptystar-modal\"></use>\n                    </svg>`.repeat(emptyStars)}\n                  </div>    \n                </div>\n        </div>\n        <p class=\"cooking-time\">${recipe.time} min</p>\n        </div>\n        <div class=\"modal-recipe-ingredients-container\">\n        <!-- <h3>Ingredients:</h3> -->\n        <ul class=\"modal-recipe-ingredients\">\n          ${recipe.ingredients\n            .map(\n              ing =>\n                `<li class=\"modal-recipe-ingredients-item\"><p class=\"ingredient\">${ing.name}</p><p class=\"ingredient-portion\"> ${ing.measure}</p></li>`\n            )\n            .join('')}\n        </ul>\n        </div>\n        </div>\n        </div>\n        <p class=\"modal-recipe-instructions\">${instructions}</p>\n        <div style=\"display: flex; gap: 20px; margin-top: 20px;\">\n          <button class=\"addToFavoriteButton\">Add to Favorite</button>\n          <button class=\"giveRatingButton\">Give a Rating</button>\n        </div>\n        </div>\n      `;\n    addModalFavListeners(recipeId);\n  } catch (error) {\n    console.error('Error fetching recipe details:', error);\n    modalContent.innerHTML =\n      '<p>Error loading recipe details. Please try again.</p>';\n  }\n}\n\nexport function closeModal() {\n  const modal = document.getElementById('recipeModal');\n  modal.style.display = 'none';\n}\n\nexport function addModalFavListeners(recipeId) {\n  const addToFavBtn = document.querySelector('.addToFavoriteButton');\n  if (localStorage.getItem('favArr') === null) {\n    localStorage.setItem('favArr', JSON.stringify([]));\n  }\n  if (favArr.includes(recipeId)) {\n    addToFavBtn.textContent = 'Added to Favorites';\n  } else {\n    const addToFavorites = function () {\n      const favButton = document.querySelector(`svg[data-id=\"${recipeId}\"]`);\n      const emptyHeart = favButton.querySelector('.svguse');\n      emptyHeart.setAttribute('href', `${sprite}#icon-heart-filled`);\n      favArr.push(recipeId);\n      localStorage.setItem('favArr', JSON.stringify(favArr));\n      addToFavBtn.textContent = 'Added to Favorites';\n      addToFavBtn.removeEventListener('click', addToFavorites); // Remove the event listener\n    };\n    addToFavBtn.addEventListener('click', addToFavorites);\n  }\n}","document.addEventListener('DOMContentLoaded', function () {\n  function openModal() {\n    let modal = document.getElementById('myModal');\n    if (modal) {\n      modal.style.display = 'block';\n    }\n  }\n\n  function closeModal() {\n    let modal = document.getElementById('myModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n  }\n\n  // Modal dışına tıklama ile kapatma\n  window.addEventListener('click', function (event) {\n    let modal = document.getElementById('myModal');\n    if (modal && event.target === modal) {\n      closeModal();\n    }\n  });\n\n  // Esc tuşuna basıldığında modalı kapatma\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {  // Esc tuşu\n      closeModal();\n    }\n  });\n\n  let openModalBtn = document.getElementById('openModalBtn');\n  let closeModalBtn = document.getElementById('closeModalBtn'); // closeModelBtn to modal :p\n\n  if (openModalBtn) {\n    openModalBtn.addEventListener('click', openModal);\n  }\n\n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', closeModal);\n  }\n});\n\n\n"],"names":["document","addEventListener","themeToggle","getElementById","sideMenuThemeToggle","mobileMenuToggle","closeSideMenu","sideMenu","sunSideList","querySelectorAll","moonSideList","body","changedWeather","forEach","sunSide","classList","toggle","moonSide","toggleDarkMode","isDarkMode","contains","localStorage","setItem","toggleMobileMenu","remove","add","getItem","event","target","sprite","form","timeOptions","areaOptions","ingrOptions","timeTriggerText","areaTriggerText","ingrTriggerText","searchInput","cancelBtn","resetBtn","loader","pagination","querySelector","cardsList","favArr","JSON","parse","displayRecipes","recipes","innerHTML","length","recipe","filledStars","Math","round","rating","emptyStars","cardHTML","preview","category","_id","includes","title","description","toFixed","repeat","insertAdjacentHTML","addRecipeButtonListeners","button","openModal","this","getAttribute","initModal","modal","onclick","closeModal","window","key","style","display","async","recipeId","modalContent","response","fetch","json","instructions","split","join","URL","youtube","searchParams","get","time","ingredients","map","ing","name","measure","addToFavBtn","stringify","textContent","addToFavorites","setAttribute","push","removeEventListener","addModalFavListeners","error","location","pathname","e","favButton","closest","id","dataset","emptyHeart","splice","indexOf","addRemoveFav","setTimeout","data","results","totalPages","iziToast","message","position","fetchRecipes","then","storedFavArr","openModalBtn","closeModalBtn"],"mappings":"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"}